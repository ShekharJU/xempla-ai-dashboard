#!/usr/bin/env python3
"""
Setup script for Xempla AI Systems Intern Prototype
Creates .env file with Gemini API key configuration
"""

import os
import sys

def create_env_file():
    """Create .env file with Gemini API key"""
    
    print("=" * 60)
    print("XEMPLA AI SYSTEMS INTERN PROTOTYPE - ENVIRONMENT SETUP")
    print("=" * 60)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        print("‚ö†Ô∏è  .env file already exists!")
        response = input("Do you want to overwrite it? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    print("\nüìã To get your Gemini API key:")
    print("1. Go to https://makersuite.google.com/app/apikey")
    print("2. Sign in with your Google account")
    print("3. Click 'Create API Key'")
    print("4. Copy the generated API key")
    print()
    
    # Get API key from user
    api_key = input("Enter your Gemini API key: ").strip()
    
    if not api_key:
        print("‚ùå No API key provided. Setup cancelled.")
        return
    
    if api_key == "your-gemini-api-key-here":
        print("‚ùå Please enter your actual API key, not the placeholder.")
        return
    
    # Create .env file content
    env_content = f"""# Configuration for Xempla AI Systems Intern Prototype
# Generated by setup script

# Google Gemini API Configuration
GEMINI_API_KEY={api_key}

# Model Configuration
GEMINI_MODEL=gemini-1.5-flash

# System Configuration
LOG_LEVEL=INFO
MAX_TOKENS=2000
TEMPERATURE=0.7

# Data Configuration
DATA_PATH=data/
RESULTS_PATH=results/

# Simulation Configuration
SIMULATION_ITERATIONS=10
FEEDBACK_LEARNING_RATE=0.1
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print("‚úÖ .env file created successfully!")
        print("üîê Your API key has been saved securely.")
        print("\nüöÄ You can now run the demo scripts:")
        print("   python building_energy_demo.py")
        print("   python quick_start.py")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return
    
    print("\n" + "=" * 60)
    print("SETUP COMPLETED SUCCESSFULLY!")
    print("=" * 60)

if __name__ == "__main__":
    create_env_file() 